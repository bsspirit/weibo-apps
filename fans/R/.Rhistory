ids
source("social2.R")
edges
source("social2.R")
g
plot(g)
source("social2.R")
source("social2.R")
source("social2.R")
source("social2.R")
View(data)
rm(list=ls())
source("social2.R")
g
E(g)
source("social2.R")
source("social2.R")
View(edges)
fix(from)
fix(to)
fix(g)
fix(names)
from
to
from;to
edges
rel[,3]
source("social2.R")
source("social2.R",echo=TRUE)
source("social2.R",echo=TRUE)
source("social2.R",echo=TRUE)
source("social2.R",echo=TRUE)
source("social2.R",echo=TRUE)
source("social2.R",echo=TRUE)
source("social2.R",echo=TRUE)
source("social2.R")
source("social2.R",echo=TRUE)
g
E(g)
rel[,4]
rel[,5]
rel
rel[,4]
length(rel[,4])
length(rel[,5])
rel
rel[,3]
edges
g
V(g)
E(g)
g
summary(g)
V(g)
edges
mode(edges)
add.edges
?add.edges
g
rm(list=ls())
# Read the files first
traits <- read.csv("traits.csv", head=FALSE)
rel <- read.csv("relations.csv", head=FALSE)
# Create the graph, add the vertices
g <- graph.empty()
g <- add.vertices(g, nrow(traits),
name=as.character(traits[,1]), age=traits[,2],
gender=as.character(traits[,3]))
# Extract first names from the full names
names <- sapply(strsplit(V(g)$name, " "), "[",1)
ids <- 1:length(names)-1
names(ids) <- names
# Create the edges
from <- as.character(rel[,1])
to <- as.character(rel[,2])
edges <- matrix(c(ids[from], ids[to]), nc=2)
g
g
E(g)
V(g)
g
?add.vertices
nrow(traits)
traits
V(g)
V(g)$name
V(g)$age
V(g)$gender
names <- sapply(strsplit(V(g)$name, " "), "[",1)
names
ids <- 1:length(names)-1
ids
from <- as.character(rel[,1])
from
to <- as.character(rel[,2])
to
edges <- matrix(c(ids[from], ids[to]), nc=2)
ids
names(ids) <- names
ids
edges
edges <- matrix(c(ids[from], ids[to]), nc=2)
edges
g <- add.edges(g, t(edges),
room=as.character(rel[,3]),
friend=rel[,4], advice=rel[,5])
g <- add.edges(g, t(edges))#,
g
E(g)
E(g)$color <- "black"
E(g)[ room=="Y" ]$color <- "red"
#tkplot(g, layout=layout.kamada.kawai, edge.color=E(g)$color)
plot(g, layout=layout.kamada.kawai, edge.color=E(g)$color)
g
g <- add.edges(g, t(edges))#
g
rm(g)
g <- graph.empty()
g <- add.vertices(g, nrow(traits),
name=as.character(traits[,1]), age=traits[,2],
gender=as.character(traits[,3]))
g
g <- add.edges(g, t(edges))
g
edges
t(edges)
?add.edges
add.edges
edges
g <- add.edges(g, edges)#,
g
source("social2.R")
source("social2.R")
source("social2.R")
g2
V(g2)
E(g2)
g2 <- add.edges(g, edges,
room=as.character(rel[,3]),
friend=rel[,4], advice=rel[,5])
g2
g2 <- add.edges(g, edges,
room=as.character(rel[,3]),
friend=rel[,4], advice=rel[,5])
g2
g
g
V(g)
V(g)$name
V(g2)
g2
E(G2)
E(g2)
source("social2.R")
g
edges
ids
from
to
ids[to]
edges
rel[,3]
rel[,4]
rel[,5]
rel
from
ids
rel
names
?add.edges
edges
add.edges(g, c(2,6,3,7) )
g
plot(g)
g <- graph.ring(10)
add.edges(g, c(2,6,3,7) )
plot(g)
t(edges)
t(edges)
g2 <- add.edges(g, t(edges),
room=as.character(rel[,3]),
friend=rel[,4], advice=rel[,5])
g2
E(g2)
V(g2)
edges
plot(edges)
g2<-add.edges(g,edges)
plot(g2)
edges
g2<-add.edges(g,edges)
g2
E(g2)
edges
g2<-add.edges(g,edges)
V(g)
E(g)
V(g)
g
V(g)
V(g)$name
g <- graph.empty()
g <- add.vertices(g, nrow(traits),
name=as.character(traits[,1]), age=traits[,2],
gender=as.character(traits[,3]))
g
V(g)
g
E(g)
g2<-add.edges(g,edges)
g2
E(g2)
edges
g
E(g)
edges
g2 <- add.edges(g, edges)
g2
V(g2)
V(g2)$name
g2
V(g2)$name
E(g2)
rm(list=ls())
source("social2.R")
ls()
g
g2<-add.edges(g,edges)
g2
edges
g2
v(g2)
V(g2)
E(g2)
g2<-add.edges(g,t(edges))
g2
E(g2)
plot(g2)
edges
rel[,3]
rel[,4]
g2
edges
t(edges)
g2 <- add.edges(g, t(edges))
g2
from
to
ids
rel
rel[,2]==Bob
rel[,2]=='Bob'
rel[,2]=='Bob' & rel[,3]=='Alice'
which(rel[,2]=='Bob' & rel[,3]=='Alice')
which(rel[,2]=='Bob')
rel[which(rel[,2]=='Bob')]
rel[,2][which(rel[,2]=='Bob')]
rel[which(rel[,2]=='Bob')]
rel[,which(rel[,2]=='Bob')]
which(rel[,2]=='Bob')
rel[which(rel[,2]=='Bob')]
rel[which(rel[,2]=='Bob'),]
rel[which(rel[,2]=='Alice'),]
rel[which(rel[,2]=='Bob'),]
ids
from
to
edges
deges
edges
g
E()
E(g)
V(g)
edges
graph( c( 0,1, 1,2, 2,2, 2,3, ), n=10)
graph( c( 0,1, 1,2, 2,2, 2,3, ), n=1)
graph( c( 0,1, 1,2, 2,2, 2,3, ), n=1)
plot(graph(c(1:10)))
g<-graph(c(1:10))
g
V(g)
E(g)
g2<-add.edges(g,c(1,3))
plot(g2)
edges<-matrix(c(1,4,8,9),nc=2)
edges
g2<-add.edges(g,edges)
plot(g2)
g
E(g)
E(g2)
rm(list=ls())
source("social2.R")
g
V(g)
E(g)
source("social2.R")
source("social2.R")
data
source("social2.R")
source("social2.R")
simplify(g)
source("social2.R")
source("social2.R")
source("social2.R")
source("social2.R")
source("social2.R")
data
order[data]
?order
order(data$V1)
data[order(data$V1)]
swiss
mode(swiss)
mode(data)
order(data$V1)
data[order(data$V1)]
data[1]
data[,1]
data[,order(data$V1)]
data[c(order(data$V1))]
data[,c(order(data$V1))]
data[order(data$V1)]
order(data$V1)
data[5]
data[,5]
data[5]
data[,5]
data
data[,5]
data
d<-as.data.frame(data)
d[,5]
d[5]
d[2]
d[1]
d[,1]
d[[1]]
d[[,1]]
d
head(d)
d[5]
d[,5]
d[5,]
data[order(data$V1),]
rm(list=ls())
source("social2.R")
source("social2.R")
source("social2.R")
source("social2.R")
g
V(g)$label
V(g)$name
setwd("~/app/weibo-apps/fans/R")
source("bifansSocial.R")
source("bifansSocial.R")
query
source("bifansSocial.R")
d
g
V(g)
V(g)
g
source("bifansSocial.R")
g2
V(g2)
V(g)
plot(g2,vertex.size = 5, vertex.label = NA,edge.color = grey(0.5))
plot(g2,vertex.size=2, vertex.label=NA,edge.color=grey(0.5))
source("bifansSocial.R")
source("bifansSocial.R")
source("bifansSocial.R")
source("bifansSocial.R")
query
source("bifansSocial.R")
source("bifansSocial.R")
source("bifansSocial.R")
length(query)
length(query[1,])
length(query[,1])
source("bifansSocial.R")
length(query[,1])
source("bifansSocial.R")
length(query[,1])
source("bifansSocial.R")
source("bifansSocial.R")
source("bifansSocial.R")
source("bifansSocial.R")
source("fansSocial.R")
source("fansSocial.R")
?plot
V(g)$label
source("fansSocial.R")
source("fansSocial.R")
source("fansSocial.R")
source("fansSocial.R")
source("fansSocial.R")
source("fansSocial.R")
source("fansSocial.R")
source("fansSocial.R")
source("fansSocial.R")
source("fansSocial.R")
source("fansSocial.R")
source("fansSocial.R")
source("fansSocial.R")
source("fansSocial.R")
source("fansSocial.R")
source("fansSocial.R")
source("fansSocial.R")
source("fansSocial.R")
source("fansSocial.R")
source("fansSocial.R")
source("fansSocial.R")
length(q1[1])
length(q1[1,])
q1
q1[1]
q1[1,]
length(q1[1])
length(q1[,1])
source("fansSocial.R")
source("fansSocial.R")
source("fansSocial.R")
source("fansSocial.R")
plot(1:10,xlim=c(-10,10),ylim=c(-10,10))
x<-1:10
plot(x)
abline(x)
plot(x)
x
y<x+1
y<-x+1
y
plot(x,y)
abline(v=y)
abline(v=y[1])
plot(x,y)
abline(v=y[1])
abline(h=x[1])
x
abline(v=x[1])
hug
hug(x,y)
rug
rug()
rug(x)
plot(x,y)
abline(v=x[2])
x<-1:10
y<x+1
plot(x,y)
abline(v=x[2]) #坐标位置，画线
rug(x)             ＃数据分布，在坐标轴显示
rug(x)
rowMeans
rowMeans()
rowMeans
showMethods("rowMeans")
source("fansSocial.R")
source("fansSocial.R")
source("fansSocial.R")
source("fansSocial.R")
source("fansSocial.R")
source("fansSocial.R")
source("fansSocial.R")
source("fansSocial.R")
source("fansSocial.R")
source("fansSocial.R")
source("fansSocial.R")
source("fansSocial.R")
source("fansNodeSocial.R")
source("fansNodeSocial.R")
source("fansNodeSocial.R")
source("fansSocial.R")
source("fansSocial.R")
source("fansSocial.R")
setwd("~/workspace/R/oracle")
setwd("~/app/weibo-apps/fans/R")
dir()
source("fansNodeSocial.R")
source("fansSocial.R")
source("fansSocial.R")
source("fansNodeSocial.R")
q1
q1$fansid
q1$fansid==1829368964
which(q1$fansid==1829368964)
q1$fansid[which(q1$fansid==1829368964)]
q1$fansid[which(q1$fansid==1829368964),]
q1$fansid[,which(q1$fansid==1829368964)]
q1[which(q1$fansid==1829368964)]
q1[which(q1$fansid==1829368964),]
q1$screen[which(q1$fansid==1829368964)]
source("fansNodeSocial.R")
source("fansNodeSocial.R")
source("fansNodeSocial.R")
unamne<-q1$screen[which(q1$fansid==uid)]
source("fansNodeSocial.R")
source("fansNodeSocial.R")
source("fansNodeSocial.R")
source("fansNodeSocial.R")
source("fansSocial.R")
source("fansNodeSocial.R")
source("fansSocial.R")
getOption('encoding')
if(FALSE){}
source("fansSocial.R")
source("fansSocial.R")
source("fansSocial.R")
source("fansSocial.R")
setwd("~/app/weibo-apps/fans/R")
