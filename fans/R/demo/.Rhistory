deseas <- aperm(resids, c(2, 3, 1))
dimnames(deseas) <- dimnames(ozone)
})
array_plyr <- system.time({
models <- aaply(ozone, 1:2, deseasf)
deseas <- aaply(models, 1:2, resid)
})
array <- cbind(array_loops, array_apply, array_plyr)
library("reshape")
ozonedf <- melt(ozone)
deseasf_df <- function(df) {
rlm(value ~ month - 1, data = df)
}
df_apply <- system.time({
pieces <- split(ozonedf, list(ozonedf$lat, ozonedf$long))
models <- lapply(pieces, deseasf_df)
results <- mapply(function(model, df) {
cbind(df[rep(1, 72), c("lat", "long")], resid(model))
}, models, pieces)
deseasdf <- do.call("rbind", results)
})
df_plyr <- system.time({
models <- dlply(ozonedf, .(lat, long), deseasf_df)
deseas <- ldply(models, resid)
})
df <- cbind(df_apply, df_plyr)
one<-ozone[1,1,]
one
ozone
head(ozone)
source("plyr-api.R")
deseas
one
month
model
onzone
ozone
head(ozone)
tail(ozone)
head(ozone,n=10)
models<-aaply(ozone,1:2,deseasf)
models
deseas<-aaply(models,1:2,resid)
deseas
model[[1,1]]
models<-as.list(rep(NA,24*24))
dim(models)<-c(24*24)
models
models<-as.list(rep(NA,24*24))
models
dim(models)<-c(24*24)
models
deseas <- array(NA, c(24, 24, 72))
dimnames(deseas) <- dimnames(ozone)
for (i in seq_len(24)) {
for(j in seq_len(24)) {
mod <- deseasf(ozone[i, j, ])
models[[i, j]] <- mod
deseas[i, j, ] <- resid(mod)
}
}
models<-as.list(rep(NA,24*24))
dim(models)<-c(24*24)
deseas <- array(NA, c(24, 24, 72))
dimnames(deseas) <- dimnames(ozone)
for (i in seq_len(24)) {
for(j in seq_len(24)) {
mod <- deseasf(ozone[i, j, ])
models[[i, j]] <- mod
deseas[i, j, ] <- resid(mod)
}
}
models <- apply(ozone, 1:2, deseasf)
resids_list <- lapply(models, resid)
resids <- unlist(resids_list)
dim(resids) <- c(72, 24, 24)
deseas <- aperm(resids, c(2, 3, 1))
dimnames(deseas) <- dimnames(ozone)
pkgs <- sort(.packages(all.available = TRUE))
pkgs
dat = read.table(textConnection(
'x     y
a1    1828
a1    1828
a1    1793
a1    1736
a2    1679
a2    1599
a2    1507
a3    1162
a3    1199
a3    921
a3    832
a3    514.6
a4    432.4
a4    290.7
a4    149.6
'), header = TRUE)
dat
dat
aggregate
?aggregate
aggregate(dat[-1], by = list(dat$x), sum)
dat[-1]
dat$x
list(dat$x)
aggregate(dat[-1], by = list(dat$x), sum)
dat$x
factor(dat$x)
aggregate(dat[-1], by = factor(dat$x), sum)
list(dat$x)
aggregate(state.x77, list(Region = state.region), mean)
state.x77
state.region
aggregate(state.x77, list(Region = state.region), sum)
aggregate(state.x77,
list(Region = state.region,
Cold = state.x77[,"Frost"] > 130),
mean)
testDF <- data.frame(v1 = c(1,3,5,7,8,3,5,NA,4,5,7,9),
v2 = c(11,33,55,77,88,33,55,NA,44,55,77,99) )
by1 <- c("red","blue",1,2,NA,"big",1,2,"red",1,NA,12)
by2 <- c("wet","dry",99,95,NA,"damp",95,99,"red",99,NA,NA)
aggregate(x = testDF, by = list(by1, by2), FUN = "mean")
testDF
by1
by2
testDF <- data.frame(v1 = c(1,3,5,7,8,3,5,NA,4,5,7,9),
v2 = c(11,33,55,77,88,33,55,NA,44,55,77,99) )
by1 <- c("red","blue",1,2,NA,"big",1,2,"red",1,NA,12)
by2 <- c("wet","dry",99,95,NA,"damp",95,99,"red",99,NA,NA)
aggregate(x = testDF, by = list(by1, by2), FUN = "mean")
testDF <- data.frame(v1 = c(1,3,5,7,8,3,5,NA,4,5,7,9),
v2 = c(11,33,55,77,88,33,55,NA,44,55,77,99) )
by1 <- c("red","blue",1,2,NA,"big",1,2,"red",1,NA,12)
by2 <- c("wet","dry",99,95,NA,"damp",95,99,"red",99,NA,NA)
aggregate(x = testDF, by = list(by1, by2), FUN = "sum")
testDF <- data.frame(v1 = c(1,3,5,7,8,3,5,NA,4,5,7,9),
v2 = c(11,33,55,77,88,33,55,NA,44,55,77,99) )
by1 <- c("red","blue",1,2,NA,"big",1,2,"red",1,NA,12)
by2 <- c("wet","dry",99,95,NA,"damp",95,99,"red",99,NA,NA)
aggregate(x = testDF, by = list(by1, by2), FUN = "mean")
testDF <- data.frame(v1 = c(1,3,5,7,8,3,5,NA,4,5,7,9),
v2 = c(11,33,55,77,88,33,55,NA,44,55,77,99) )
by1 <- c("red","blue",1,2,NA,"big",1,2,"red",1,NA,12)
by2 <- c("wet","dry",99,95,NA,"damp",95,99,"red",99,NA,NA)
aggregate(x = testDF, by = list(by1, by2), mean)
testDF
aggregate(x = testDF, by = list(by1), FUN = "mean")
aggregate(x = testDF, by = list(by2), FUN = "mean")
aggregate(x = testDF, by = list(by2), FUN = "sum")
aggregate(x = testDF, by = list(by1), FUN = "sum")
aggregate(x = testDF, by = list(by1,by2), FUN = "sum")
fby1 <- factor(by1, exclude = "")
fby1
fby2 <- factor(by2, exclude = "")
aggregate(x = testDF, by = list(fby1, fby2), FUN = "mean")
aggregate(weight ~ feed, data = chickwts, mean)
chickwts
aggregate(weight ~ feed, data = chickwts, mean)
aggregate(chickwts, by=list(chkckwts[-1]), mean)
aggregate(chickwts, by=list(chickwts[-1]), mean)
list(chickwts[-1])
aggregate(chickwts[-1], by=list(chickwts$feed), mean)
chickwts[-1]
chickwts[1]
aggregate(chickwts[1], by=list(chickwts$feed), mean)
aggregate(weight ~ feed, data = chickwts, mean)
aggregate(breaks ~ wool + tension, data = warpbreaks, mean)
warpbreaks
aggregate(breaks ~ wool + tension, data = warpbreaks, mean)
aggregate(warpbreaks[1], by=list(warpbreaks$tension,warpbreaks$wool), mean)
aggregate(cbind(Ozone, Temp) ~ Month, data = airquality, mean)
airquality
head(airquality)
aggregate(cbind(Ozone, Temp) ~ Month, data = airquality, mean)
aggregate(cbind(ncases, ncontrols) ~ alcgp + tobgp, data = esoph, sum)
esoph
head(esoph)
aggregate(cbind(ncases, ncontrols) ~ alcgp + tobgp, data = esoph, sum)
aggregate(. ~ Species, data = iris, mean)
head(iris)
aggregate(. ~ Species, data = iris, mean)
ToothGrowth
head(ToothGrowth)
aggregate(len ~ ., data = ToothGrowth, mean)
ag <- aggregate(len ~ ., data = ToothGrowth, mean)
ag
xtabs(len ~ ., data = ag)
#http://cos.name/cn/topic/107434#post-234333
# 问题如下：
# 问题1：如何按照x列的变量名对y列的数据求和，即所有与a1同行的数据（1828 1828 1793 1736）求和，依次类推，按照a2，a3和a4分组求和
# 问题2：如何按照x列的变量名分组，求每组第一个数据与最后一个数据的差？以a1为例，求1736-1828的值，以此类推，把整个数据框分组求差。
dat = read.table(textConnection(
'x     y
a1    1828
a1    1828
a1    1793
a1    1736
a2    1679
a2    1599
a2    1507
a3    1162
a3    1199
a3    921
a3    832
a3    514.6
a4    432.4
a4    290.7
a4    149.6
'), header = TRUE)
aggregate(dat[-1], by = list(dat$x), sum)
minus = function(x) return(x[length(x)] - x[1])
aggregate(dat[-1], by = list(dat$x), minus)
source("plyr-demo.R")
source("plyr-demo.R",echo=TRUE)
ddply(dat,"x",summarise,toal=sum(y),differ=minus(y))
source("plyr-demo.R",echo=TRUE)
system.time(for (i in 1:10000) invisible(ddply(dat, 'x', summarise, differ = minus(y))))
minus = function(x) tail(x, 1) - head(x, 1)
system.time(for (i in 1:10000) invisible(aggregate(dat[-1], by = list(dat$x), minus)))
by
by()
?by
by(warpbreaks[, 1:2], warpbreaks[,"tension"], summary)
head(warpbreaks)
warpbreaks[, 1:2]
warpbreaks[,"tension"]
summary
by(warpbreaks[, 1:2], warpbreaks[,"tension"], summary)
by(warpbreaks[, 1:2], warpbreaks[,"tension"], sum)
by(warpbreaks[, 1:2], warpbreaks[,"tension"], summary)
by(warpbreaks[, 1],   warpbreaks[, -1],       summary)
by(warpbreaks, warpbreaks[,"tension"],
function(x) lm(breaks ~ wool, data = x))
tmp <- with(warpbreaks,
by(warpbreaks, tension,
function(x) lm(breaks ~ wool, data = x)))
sapply(tmp, coef)
groups <- as.factor(rbinom(32, n = 5, prob = 0.4))
groups
rbinom(32, n = 5, prob = 0.4)
rbinom
?rbinom
sum(dbinom(46:54, 100, 0.5))
dbinom(46:54, 100, 0.5)
46:54
tapply(groups, groups, length)
groups
table(groups)
tapply(warpbreaks$breaks, warpbreaks[,-1], sum)
tapply(warpbreaks$breaks, warpbreaks[, 3, drop = FALSE], sum)
n <- 17; fac <- factor(rep(1:3, length = n), levels = 1:5)
n
fac
levels
table(fac)
tapply(1:n, fac, sum)
tapply(1:n, fac, sum, simplify = FALSE)
mode(tapply(1:n, fac, sum, simplify = FALSE))
tapply(1:n, fac, range)
tapply(1:n, fac, quantile)
tapply(presidents, cycle(presidents), mean, na.rm = TRUE)
ind <- list(c(1, 2, 2), c("A", "A", "B"))
indx
ind
table(ind)
tapply(1:3, ind)
tapply(1:3, ind, sum)
splite
split
?split
n <- 10; nn <- 100
g <- factor(round(n * runif(n * nn)))
g
x <- rnorm(n * nn) + sqrt(as.numeric(g))
x
xg <- split(x, g)
xg
g
x
boxplot(xg, col = "lavender", notch = TRUE, varwidth = TRUE)
sapply(xg, length)
sapply(xg, mean)
xg
sapply(xg, mean)
z <- unsplit(lapply(split(x, g), scale), g)
z
zz <- x
split(zz, g) <- lapply(split(x, g), scale)
xx
zz
tapply(z, g, sd)
z
tapply(zz, g, sd)
split(1:10, 1:2)
split(1:10, 1:3)
split(1:10, 1:5)
x <- str_c('测试一下',1:10)0,collapse='_')
x <- str_c('测试一下',1:100,collapse='_')
library(stringr)
x <- str_c('测试一下',1:100,collapse='_')
x
str_count(x,'7')
str_count(x,'试')
mode(x)
scan
scan("_train_1.dat")
scan(file="_train_1.dat")
?scan
scan(file="_train_1.dat",what='character')
txt<-scan(file="_train_1.dat",what='character')
txt
mode(txt)
str_count(txt,'9:')
txt<-scan(file="_train_1.dat",what="")
txt
scan
txt<-scan(file="_train_1.dat",what='character',sep="[[]]")
txt<-scan(file="_train_1.dat",what='character',sep="[")
txt
txt<-scan(file="_train_1.dat",what='character',sep="~")
txt
str_count(txt,'9:')
?scan
txt<-scan(file="_train_1.dat",what='character',sep="\n")
txt
txt<-scan(file="_train_1.dat",what='character',sep="\nn")
txt<-scan(file="_train_1.dat",what='character',sep="\~")
txt<-scan(file="_train_1.dat",what='character',sep="~")
txt
txt<-scan(file="_train_1.dat",what='raw',sep="~")
txt<-scan(file="_train_1.dat",what='raw')
txt
txt<-scan(file="_train_1.dat",what='character',sep="~")
z <- file("_train_1.dat")
z
readBin(z)
readBin(z,character())
readBin(z,character(),4)
z
z <- file("_train_1.dat","rb")
z
readBin(zz, character(), 4)
readBin(zz, character(), 1)
txt<-scan(file="_train_1.dat",what='character',sep="~")
txt<-scan(file="_train_1.dat",what='character',sep="\n")
txt
str_count(txt,'9:')
txt<-scan(file="_train_1.dat",what='character',sep="~")
txt<-scan(file="_train_1.dat",what='character',sep="~",allowEscapes=TRUE)
txt<-scan(file="_train_1.dat",what='character',sep="~",allowEscapes=FALSE)
txt<-scan(file="_train_1.dat",what='character',sep="~",multi.line=TRUE)
txt<-scan(file="_train_1.dat",what='character',sep="~",multi.line=FALSE)
txt<-scan(file="_train_1.dat",what='character',sep="~",quote="~")
txt<-scan(file="_train_1.dat",what='character',sep="~")
paste(txt)
a<-paste(txt)
a
a<-paste(txt[1])
a
a<-paste(txt[1],txt[2])
a
?aggregate
aggregate(txt,paste)
c(txt)
c(txt[1])
c(txt[,1])
txt[,1]
txt[1,]
txt[1]
length(txt)
mode(txt)
aggregate(txt,1,paste)
aggregate(txt,1:length(txt),paste)
aggregate(txt,list(1:length(txt)),paste)
a<-aggregate(txt,list(1:length(txt)),paste)
a
head(a)
str_count(a,'9:')
mode(a)
a
apply
?apply
apply(txt,1,cat)
txt
cat(txt[1],txt[2])
txt[1]
txt[1],txt[2]
txt[1];txt[2]
cat(txt[1],txt[2])
apply(txt,1,cat)
apply(txt,2,cat)
txt<-scan(file="_train_1.dat",what='character',sep="\n")
txt
sapply(txt,paste)
sapply(txt,cat)
mode(sapply(txt,cat))
a<-sapply(txt,cat)
a
mode(a)
lapply(txt,cat)
sapply(txt,cat)
merge(txt,cat)
merge(txt)
merge(txt,1)
merge(txt,2)
merge(txt,txt)
merge(txt,"")
str_c
?str_c
str_c(txt)
a<-str_c(txt)
a
mode(a)
a[1]
a<-str_c(txt,sep="")
a
a[1]
a<-str_c(txt,sep="",collapse="")
a[1]
a
a[]
a[2]
a[1]
mode(a)
length(a)
a
str_count(a,':9')
str_count(a,':7')
dat = read.table(textConnection(
'ID value
1 1 4
2 1 7
3 2 8
4 2 3
5 2 3
'), header = TRUE)
dta
dat
dat = read.table(textConnection(
'ID value
1 4
1 7
2 8
2 3
2 3
'), header = TRUE)
dat = read.table(textConnection(
'ID value
1 4
1 7
2 8
2 3
2 3
'), header = TRUE)
aggregate(dat[-1],list=dat$ID,sum)
dat[-1]
dat = read.table(textConnection(
'ID value
1 4
1 7
2 8
2 3
2 3
'), header = TRUE)
dat
dat$ID
dat[-1]
aggregate(dat[-1],list=dat$ID,sum)
aggregate(dat[-1],by=list(dat$ID),sum)
dat = read.table(textConnection(
'ID value
1 4
1 7
2 8
2 3
2 3
'), header = TRUE)
aggregate(dat[-1],by=list(dat$ID),sum)
aggregate(dat[-1],by=list(sum=dat$ID),sum)
aggregate(dat[-1],by=list(ID=dat$ID),sum)
aggregate(dat[-1],by=list(ID=dat$ID),sum=sum)
aggregate(dat[-1], by = list(dat$x), sum)
aggregate(dat[-1],by=list(ID=dat$ID),sum)
?aggregate
aggregate(dat[-1],by=list(ID=dat$ID),FUN ="sum")
dat = read.table(textConnection(
'ID value
1 4
1 7
2 8
2 3
2 3
'), header = TRUE)
aggregate(dat[-1],by=list(ID=dat$ID),sum)
tapply(dat[-1],ID=dat$ID,sum)
dat = read.table(textConnection(
'ID value
1 4
1 7
2 8
2 3
2 3
'), header = TRUE)
aggregate(dat[-1],by=list(ID=dat$ID),sum)
tapply(dat[-1],ID=dat$ID,sum)
tapply(dat,ID=dat$ID,sum)
apply(dat,ID=dat$ID,sum)
apply(dat,dat$ID,sum)
apply(dat[-1],dat$ID,sum)
aggregate(dat[-1],by=list(ID=dat$ID),sum)
