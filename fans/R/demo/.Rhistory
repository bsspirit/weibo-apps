dir()
setwd("~/app/weibo-apps/fans/R/demo")
debug(mean.default)
mean(1:10)
where
exit
quit
q()
fda
fda
fda
fd
setwd("~/app/weibo-apps/fans/R/demo")
dir()
browser()
dir()
browser()
q()
q
source("svm.R")
source("svm.R")
source("svm.R")
source("svm.R")
source("svm.R")
source("svm.R")
source("debug.R")
source("debug.R")
traceback()
source("debug.R")
geterrmessage()
source("debug.R")
geterrmessage()
where
source("debug.R")
where
trim
c
trace()
source("debug.R")
trace()
c
source("debug.R")
n
where
n
n
n
n
q
lm(y ~ x)
rm(list=ls())
lm(y ~ x)
traceback()
source("debug.R")
where
n
x<-data.frame(c(1,2,3,4,5),c(4,6,74,2,1))
x
y<-as.matrix(x)
y
y[1]
y[1,]
y[,1]-y[,2]
x
y<-data.frame(c(3,5))
y
y<-as.matrix(data.frame(c(3,5)))
y
y<-as.matrix(data.frame(c(3),c(5))
)
y
x
y
x-y
a<-c(1,2,3,4,6,4,6,7,23,2)
a
a<-c(1,2,3,4,6,4,6,7,23,2,ncol=2)
a
a<-c(1,2,3,4,6,4,6,7,23,2,nrow=5)
a
a<-matrix(1,2,3,4,6,4,6,7,23,2,nrow=5)
a<-matrix(1,2,3,4,6,4,6,7,23,2,ncol=2)
matrix
a<-matrix(1,2,3,4,6,4,6,7,23,2,nrow=2)
matrix(1,2,3,4,6,4,6,7,23,2,nrow=2)
matrix(c(1,2,3,4,6,4,6,7,23,2),nrow=2)
matrix(c(1,2,3,4,6,4,6,7,23,2),ncol=2)
a<-matrix(c(1,2,3,4,6,4,6,7,23,2),ncol=2)
b<-matrix(c(3,5.6))
b
b<-matrix(c(3,5.6),ncol=)
b<-matrix(c(3,5.6),ncol=2)
b
a-b
data.frame(matrix(c(3,5.6),ncol=2))
data.frame(b)
data.frame(a)-data.frame(b)
x
y
x-y
mode(x)
mode(y)
mode(a)
mode(b)
as.list(a)
as.list(a)-b
as.list(a)-as.list(b)
a
b
apply
?apply
apply(a,1,sum)
a
apply(a,b,sum)
apply(a,2,sum)
apply(a,1,sum)
apply(a,c(1,2),sum)
apply(x, 2, sort)
apply(a, 2, sort)
a
b<-matrix(c(rep(3,5),rep(5.6,5),),ncol=2)
b<-matrix(c(rep(3,5),rep(5.6,5)),ncol=2)
b
a-b
a
a-b
b
b<-matrix(3,5.6),ncol=2)
b<-matrix(c(3,5.6),ncol=2)
b
nrow(a)
b
b*5
b %*%5
b %*% 5
rbind(b[1,])
rbind(b[1,],b[1,])
rbind(b[1,],b[1,],b[1,],b[1,],b[1,])
a-rbind(b[1,],b[1,],b[1,],b[1,],b[1,])
a-rbind(b)
rbind(b,b)
rbind(b,b,b)
rbind(rep(b,nrow(a))
)
rbind(rep(b,nrow(a)))
rep(b,nrow(a))
rbind(b,b)
rbind(c(rep(b,nrow(a))))
rbind(rep(b,nrow(a)),ncol=2)
matrix(rbind(rep(b,nrow(a))),ncol=2)
a-matrix(rbind(rep(b,nrow(a))),ncol=2)
a-matrix(rbind(rep(b,nrow(a))),ncol=ncol(a))
time_cost <- data.frame(Task = c("1.Clarify Demand", "2.Model Selection", "3.Get Data", "4.Data Cleaning", "5.Analyzing", "6.Report"), Time_ideal = c(0.1, 0.3, 0.1, 0.1, 0.3, 0.1), Time_real = c(0.2, 0.05, 0.2, 0.3, 0.05, 0.2))
library(ggplot2)
library(gridExtra)
library(scales)
g1 <- ggplot(data = time_cost, aes(x = Task, y = Time_ideal, fill = Time_ideal)) + geom_bar() + coord_flip() + geom_text(aes(label = paste0(round(Time_ideal * 100, 2), "%"), y = Time_ideal/2)) + scale_y_continuous(labels = percent) + scale_fill_continuous(low = "deepskyblue1", high = "deepskyblue3") + scale_x_discrete(limits = rev(levels(time_cost$Task)))
g2 <- ggplot(data = time_cost, aes(x = Task, y = Time_real, fill = Time_real)) + geom_bar() + coord_flip() + geom_text(aes(label = paste0(round(Time_real * 100, 2), "%"), y = Time_real/2)) + scale_y_continuous(labels = percent) + scale_fill_continuous(low = "skyblue2", high = "chocolate3") + scale_x_discrete(limits = rev(levels(time_cost$Task)))
grid.arrange(g1, g2, nrow = 1)
install.packages("scales")
install.packages("gridExtra")
time_cost <- data.frame(Task = c("1.Clarify Demand", "2.Model Selection", "3.Get Data", "4.Data Cleaning", "5.Analyzing", "6.Report"), Time_ideal = c(0.1, 0.3, 0.1, 0.1, 0.3, 0.1), Time_real = c(0.2, 0.05, 0.2, 0.3, 0.05, 0.2))
library(ggplot2)
library(gridExtra)
library(scales)
g1 <- ggplot(data = time_cost, aes(x = Task, y = Time_ideal, fill = Time_ideal)) + geom_bar() + coord_flip() + geom_text(aes(label = paste0(round(Time_ideal * 100, 2), "%"), y = Time_ideal/2)) + scale_y_continuous(labels = percent) + scale_fill_continuous(low = "deepskyblue1", high = "deepskyblue3") + scale_x_discrete(limits = rev(levels(time_cost$Task)))
g2 <- ggplot(data = time_cost, aes(x = Task, y = Time_real, fill = Time_real)) + geom_bar() + coord_flip() + geom_text(aes(label = paste0(round(Time_real * 100, 2), "%"), y = Time_real/2)) + scale_y_continuous(labels = percent) + scale_fill_continuous(low = "skyblue2", high = "chocolate3") + scale_x_discrete(limits = rev(levels(time_cost$Task)))
grid.arrange(g1, g2, nrow = 1)
library(gridExtra)
library(scales)
g1 <- ggplot(data = time_cost, aes(x = Task, y = Time_ideal, fill = Time_ideal)) + geom_bar() + coord_flip() + geom_text(aes(label = paste0(round(Time_ideal * 100, 2), "%"), y = Time_ideal/2)) + scale_y_continuous(labels = percent) + scale_fill_continuous(low = "deepskyblue1", high = "deepskyblue3") + scale_x_discrete(limits = rev(levels(time_cost$Task)))
g2 <- ggplot(data = time_cost, aes(x = Task, y = Time_real, fill = Time_real)) + geom_bar() + coord_flip() + geom_text(aes(label = paste0(round(Time_real * 100, 2), "%"), y = Time_real/2)) + scale_y_continuous(labels = percent) + scale_fill_continuous(low = "skyblue2", high = "chocolate3") + scale_x_discrete(limits = rev(levels(time_cost$Task)))
p+g1+g1
g1
g2
g1 <- ggplot(data = time_cost, aes(x = Task, y = Time_ideal, fill = Time_ideal)) + geom_bar() + coord_flip() + geom_text(aes(label = paste(round(Time_ideal * 100, 2), "%"), y = Time_ideal/2)) + scale_y_continuous(labels = percent) + scale_fill_continuous(low = "deepskyblue1", high = "deepskyblue3") + scale_x_discrete(limits = rev(levels(time_cost$Task)))
g1
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
q()
c
c
