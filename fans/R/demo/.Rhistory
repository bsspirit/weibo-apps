setwd("~/app/weibo-apps/fans/R/demo")
svm
library(e1071)
svm
?svm
iris
data(iris)
ls
ls()
source("svm.R")
source("svm.R")
plot(model,iris)
library(e1071)
data(iris)
model<-svm(Species~.,data=iris)
print(model)
summary(model)
plot(model,iris)
model
plot(model,iris)
head(iris)
source("svm.R")
help(predict.svm)
index <- 1:nrow(cats)
testindex <- sample(index, trunc(length(index)/3))
testset <- cats[testindex,]
trainset <- cats[-testindex,]
model <- svm(Sex~., data = trainset)
prediction <- predict(model, testset[,-1])
tab <- table(pred = prediction, true = testset[,1])
tab
classAgreement(tab)
tuned <- tune.svm(Sex~., data = trainset, gamma = 10^(-6:-1), cost = 10^(1:2))
summary(tuned)
install.packages("libsvm")
library(MASS)
data(cats)
model<-svm(Sex~.,data=cats)
print(model)
summary(model)
plot(model,cats)
index <- 1:nrow(cats)
testindex <- sample(index, trunc(length(index)/3))
testset <- cats[testindex,]
trainset <- cats[-testindex,]
model <- svm(Sex~., data = trainset)
prediction <- predict(model, testset[,-1])
tab <- table(pred = prediction, true = testset[,1])
classAgreement(tab)
tuned <- tune.svm(Sex~., data = trainset, gamma = 10^(-6:-1), cost = 10^(1:2))
summary(tuned)
summary(tuned)
plot(tuned,cats)
tune.svm
?tune.svm
?svm
library(MASS)
data(cats)
model<-svm(Sex~.,data=cats)
print(model)
summary(model)
model <- svm(Sex~., data = trainset)
prediction <- predict(model, testset[,-1])
trainset
head(trainset)
testindex <- sample(index, trunc(length(index)/3))
testindex
cats[testindex,]
testset <- cats[testindex,]
testset
sort(testset)
length(testset)
length(testset[1,])
length(testset[1])
x=runif(100,5,5)
x
x=runif(100,-5,5)
x
x=runif(100,-5,5)
y<-x^2+x^2
plot(x,y)
sqrt(1-x^2)
x=runif(100,1,0)
y=sqrt(1-x^2)
y
install.packages("plotrix")
library(plotrix)
plot(1:5,seq(1,10,length=5),type="n",xlab="",ylab="",main="Test draw.circle")
draw.circle(2,2,0.5,border="purple",lty=1,lwd=1)
draw.circle(2.5,8,0.6,border="red",lty=3,lwd=3)
draw.circle(4,4,1,border="purple",lty=1,lwd=1)
z=seq(0,2*pi,length=1000)
x=sin(z)
y=cos(z)
plot(x,y,type="l",axes=F,xlab="",ylab="")
x
y
z=seq(0, 2*pi,length=500)
x=sin(z)
y=cos(z)
plot(x,y,type="l",axes=F,xlab="",ylab="")
z=seq(0, 2*pi,length=500)
x=sin(z)
y=cos(z)
plot(x,y)
plot(x,y,cex=0.6)
z=seq(0, 2*pi,length=500)
x=jitter(sin(z))
y=jitter(cos(z))
plot(x,y,cex=0.6)
x
y
z=seq(0, 2*pi,length=50)
x=jitter(sin(z))
y=jitter(cos(z))
plot(x,y,cex=0.6)
x=jitter(sin(z))
x
sin(z)
jitter
?jitter
z=seq(0, 2*pi,length=50)
x=jitter(sin(z),10)
y=jitter(cos(z))
plot(x,y,cex=0.6)
z=seq(0, 2*pi,length=50)
x=jitter(sin(z),10)
y=jitter(cos(z),10)
plot(x,y,cex=0.6)
z=seq(0, 2*pi,length=50)
x=jitter(sin(z),1)
y=jitter(cos(z),1)
plot(x,y,cex=0.6)
z=seq(0, 2*pi,length=50)
x=jitter(sin(z),1,100)
y=jitter(cos(z),1,100)
plot(x,y,cex=0.6)
z=seq(0, 2*pi,length=50)
x=jitter(sin(z),1,10)
y=jitter(cos(z),1,10)
plot(x,y,cex=0.6)
z=seq(0, 2*pi,length=50)
x=jitter(sin(z),1,2)
y=jitter(cos(z),1,2)
plot(x,y,cex=0.6)
z=seq(0, 2*pi,length=50)
x=jitter(sin(z),1,1)
y=jitter(cos(z),1,1)
plot(x,y,cex=0.6)
z=seq(0, 2*pi,length=500)
x=jitter(sin(z),1,1)
y=jitter(cos(z),1,1)
plot(x,y,cex=0.6)
z=seq(0, 2*pi,length=500)
x=jitter(sin(z),0.1,1)
y=jitter(cos(z),0.1,1)
plot(x,y,cex=0.6)
jitter(rep(0, 7))
round(jitter(c(rep(1,3),  rep(1.2, 4), rep(3,3))), 3)
z=seq(0, 2*pi,length=500)
x=jitter(sin(z),3)
y=jitter(cos(z),3)
plot(x,y,cex=0.6)
z=seq(0, 2*pi,length=500)
x=jitter(sin(z),3,3)
y=jitter(cos(z),3)
plot(x,y,cex=0.6)
z=seq(0, 2*pi,length=500)
x=jitter(sin(z),3,0.2)
y=jitter(cos(z),3)
plot(x,y,cex=0.6)
z=seq(0, 2*pi,length=500)
x=jitter(sin(z),1,0.2)
y=jitter(cos(z),1)
plot(x,y,cex=0.6)
z=seq(0, 2*pi,length=500)
x=jitter(sin(z),1,0.2)
y=jitter(cos(z),1,0.1)
plot(x,y,cex=0.6)
z=seq(0, 2*pi,length=500)
x=jitter(sin(z),1,0.01)
y=jitter(cos(z),1,0.01)
plot(x,y,cex=0.6)
z=seq(0, 2*pi,length=500)
x=jitter(sin(z),1,0.05)
y=jitter(cos(z),1,0.05)
plot(x,y,cex=0.6)
z=seq(0, 2*pi,length=500)
x=jitter(sin(z),1,0.05)
y=jitter(cos(z),1,0.05)
plot(x,y,cex=0.6,col="red")
z=seq(0, 4*pi,length=500)
x=jitter(sin(z),1,0.05)
y=jitter(cos(z),1,0.05)
plot(x,y,cex=0.6,col="red")
z=seq(0, 2*pi,length=500)
x=jitter(sin(z),1,0.05)
y=jitter(cos(z),1,0.05)
z2=seq(0, 4*pi,length=500)
x2=jitter(sin(z),1,0.05)
y2=jitter(cos(z),1,0.05)
plot(x,y,cex=0.6,col="red")
points(x2,y2,cex=0.6,col="blue")
z=seq(0, 2*pi,length=500)
x=jitter(sin(z),1,0.05)
y=jitter(cos(z),1,0.05)
z2=seq(2, 4*pi,length=500)
x2=jitter(sin(z),1,0.05)
y2=jitter(cos(z),1,0.05)
plot(x,y,cex=0.6,col="red")
points(x2,y2,cex=0.6,col="blue")
z=seq(0, 2*pi,length=500)
x=jitter(sin(z),1,0.05)
y=jitter(cos(z),1,0.05)
z2=seq(0, 4*pi,length=500)
x2=jitter(sin(z),1,0.05)+5
y2=jitter(cos(z),1,0.05)+5
plot(x,y,cex=0.6,col="red")
points(x2,y2,cex=0.6,col="blue")
z=seq(0, 2*pi,length=500)
x=jitter(sin(z),1,0.05)
y=jitter(cos(z),1,0.05)
z2=seq(0, 4*pi,length=500)
x2=jitter(sin(z),1,0.05)+5
y2=jitter(cos(z),1,0.05)+5
plot()
points(x,y,cex=0.6,col="red")
points(x2,y2,cex=0.6,col="blue")
z=seq(0, 2*pi,length=500)
x=jitter(sin(z),1,0.05)
y=jitter(cos(z),1,0.05)
z2=seq(0, 4*pi,length=500)
x2=jitter(sin(z),1,0.05)+5
y2=jitter(cos(z),1,0.05)+5
plot(x,y,cex=0.6,col="red",xlim=c(-10,10),ylim=c(-10,10))
points(x2,y2,cex=0.6,col="blue")
z=seq(0, 2*pi,length=500)
x=jitter(sin(z),1,0.05)
y=jitter(cos(z),1,0.05)
z2=seq(0, 4*pi,length=500)
x2=jitter(sin(z),1,0.05)+5
y2=jitter(cos(z),1,0.05)+5
plot(x,y,cex=0.6,col="red",xlim=c(-5,5),ylim=c(-5,5))
points(x2,y2,cex=0.6,col="blue")
z=seq(0, 2*pi,length=100)
x=jitter(sin(z),1,0.05)
y=jitter(cos(z),1,0.05)
z2=seq(0, 4*pi,length=100)
x2=jitter(sin(z),1,0.05)+5
y2=jitter(cos(z),1,0.05)+5
plot(x,y,cex=0.6,col="red",xlim=c(-5,5),ylim=c(-5,5))
points(x2,y2,cex=0.6,col="blue")
z=seq(2, 2*pi,length=100)
x=jitter(sin(z),1,0.05)
y=jitter(cos(z),1,0.05)
z2=seq(0, 4*pi,length=100)
x2=jitter(sin(z),1,0.05)+5
y2=jitter(cos(z),1,0.05)+5
plot(x,y,cex=0.6,col="red",xlim=c(-5,5),ylim=c(-5,5))
points(x2,y2,cex=0.6,col="blue")
z=seq(0, 2*pi,length=100)
x=jitter(sin(z),1,0.05)+2
y=jitter(cos(z),1,0.05)+2
z2=seq(0, 4*pi,length=100)
x2=jitter(sin(z),1,0.05)+5
y2=jitter(cos(z),1,0.05)+5
plot(x,y,cex=0.6,col="red",xlim=c(-5,5),ylim=c(-5,5))
points(x2,y2,cex=0.6,col="blue")
z=seq(0, 2*pi,length=100)+2
x=jitter(sin(z),1,0.05)
y=jitter(cos(z),1,0.05)
z2=seq(0, 4*pi,length=100)+5
x2=jitter(sin(z),1,0.05)
y2=jitter(cos(z),1,0.05)
plot(x,y,cex=0.6,col="red",xlim=c(-5,5),ylim=c(-5,5))
points(x2,y2,cex=0.6,col="blue")
z
z=seq(0, 2*pi,length=100)
x=jitter(sin(z),1,0.05)
y=jitter(cos(z),1,0.05)
z2=seq(0, 2*pi,length=100)
x2=jitter(sin(z),1,0.05)*4
y2=jitter(cos(z),1,0.05)*4
plot(x,y,cex=0.6,col="red",xlim=c(-5,5),ylim=c(-5,5))
points(x2,y2,cex=0.6,col="blue")
z=seq(0, 2*pi,length=100)
x=jitter(sin(z),1,0.05)
y=jitter(cos(z),1,0.05)
z2=seq(0, 2*pi,length=100)
x2=jitter(sin(z),1,0.05)*2
y2=jitter(cos(z),1,0.05)*2
plot(x,y,cex=0.6,col="red",xlim=c(-5,5),ylim=c(-5,5))
points(x2,y2,cex=0.6,col="blue")
z=seq(0, 2*pi,length=100)
x=jitter(sin(z),1,0.05)
y=jitter(cos(z),1,0.05)
z2=seq(0, 2*pi,length=100)
x2=jitter(sin(z),1,0.05)*2
y2=jitter(cos(z),1,0.05)*2
plot(x,y,cex=0.6,col="red",xlim=c(-2,2),ylim=c(-2,2))
points(x2,y2,cex=0.6,col="blue")
z=seq(0, 2*pi,length=100)
x=jitter(sin(z),1,0.05)
y=jitter(cos(z),1,0.05)
x2=jitter(sin(z),1,0.05)*2
y2=jitter(cos(z),1,0.05)*2
plot(x,y,cex=0.6,col="red",xlim=c(-2,2),ylim=c(-2,2))
points(x2,y2,cex=0.6,col="blue")
z=seq(0, 2*pi,length=200)
x=jitter(sin(z),1,0.05)
y=jitter(cos(z),1,0.05)
x2=jitter(sin(z),1,0.05)*2
y2=jitter(cos(z),1,0.05)*2
plot(x,y,cex=0.6,col="red",xlim=c(-2,2),ylim=c(-2,2))
points(x2,y2,cex=0.6,col="blue")
data<-data.frame(x,y)
data
data2<-data.frame(x2,y2)
data2
rbind(data,data2)
rbind(data,c(x2,y2))
data
x
x2
rbind(x,x2)
cbind(x,x2)
rbind(x,x2)
rbind(x,x2)
x
x
mode(x)
c(x,x2)
data<-data.frame(c(x,x2),c(y,y2)
)
data<-data.frame(c(x,x2),c(y,y2))
data
seq(1,2)
rep(1,200)
(rep(1,200),rep(2,200))
c(rep(1,200),rep(2,200))
cbind(data)<-c(rep(1,200),rep(2,200))
cbind(data,c(rep(1,200),rep(2,200)))
data
df<-data.frame(c(x,x2),c(y,y2))
data<-cbind(df,c(rep(1,200),rep(2,200)))
data
?svm
data
head(data)
data<-cbind(df,c=c(rep(1,200),rep(2,200)))
head(data)
df<-data.frame(x=c(x,x2),y=c(y,y2))
data<-cbind(df,c=c(rep(1,200),rep(2,200)))
head(data)
model<-svm(c~.,data=data)
model
plot(model,data)
plot(model,data)
plot(model,data)
summary(model)
?svm
model<-svm(c~.,data=data,kernel="polynomial")
plot(model,data)
summary(model)
model<-svm(c~.,data=data,type="C-classification",kernel="polynomial")
summary(model)
plot(model,data)
source("svm.R")
source("svm.R")
source("svm.R")
source("svm.R")
source("svm.R")
source("svm.R")
model<-svm(Species~., data = iris,
model<-svm(Species~., data = iris,)
)
source("svm.R")
model<-svm(Species~., data = iris, method = "C-classification", kernel = "radial",cost = 10, gamma = 0.1)
model
source("svm.R")
source("svm.R")
model
summary(model)
source("svm.R")
install.packages("klaR")
#library("klaR")
data("B3")
Bmod <- svmlight(PHASEN ~ ., data = B3,svm.options="-c 10 -t 2 -g 0.1 -v 0")
predict(Bmod, B3[c(4, 9, 30, 60, 80, 120),-1])
library("klaR")
data("B3")
Bmod <- svmlight(PHASEN ~ ., data = B3,svm.options="-c 10 -t 2 -g 0.1 -v 0")
predict(Bmod, B3[c(4, 9, 30, 60, 80, 120),-1])
library("klaR")
data("B3")
B3
head(B3)
Bmod <- svmlight(PHASEN~., data = B3,svm.options="-c 10 -t 2 -g 0.1 -v 0")
svmlight
?svmlight
Bmod <-svmlight(PHASEN ~ ., data = B3, svm.options = "-t 2 -g 0.1")
Bmod <-svmlight(PHASEN ~ ., data = B3)
head(B3)
source("svm.R")
source("svm.R")
source("svm.R")
source("svm.R")
source("svm.R")
source("svm.R")
summary(model)
source("svm.R")
?svm
source("svm.R")
source("svm.R")
source("svm.R")
source("svm.R")
source("svm.R")
source("svm.R")
source("svm.R")
source("svm.R")
source("svm.R")
source("svm.R")
source("svm.R")
source("svm.R")
source("svm.R")
source("svm.R")
source("svm.R")
source("svm.R")
source("svm.R")
source("svm.R")
source("svm.R")
source("svm.R")
source("svm.R")
slice
?plot
svm.plot
plot.svm
source("svm.R")
source("svm.R")
source("svm.R")
source("svm.R")
source("svm.R")
source("svm.R")
source("svm.R")
source("svm.R")
source("svm.R")
z=seq(0, 2*pi,length=200)
x=jitter(sin(z),1,0.05)
y=jitter(cos(z),1,0.05)
x2=jitter(sin(z),1,0.05)*2
y2=jitter(cos(z),1,0.05)*2
# plot(x,y,cex=0.6,col="red",xlim=c(-2,2),ylim=c(-2,2))
# points(x2,y2,cex=0.6,col="blue")
#
df<-data.frame(x=c(x,x2),y=c(y,y2))
data<-cbind(df,c=c(rep(1,200),rep(2,200)))
data
head(data)
model<-svm(c~. , data = data, method="C-classification", kernel="radial",cost=100,gamma=0.1)
model
summary(model)
model<-svm(c~. , data = data, type="C-classification", kernel="radial",cost=100,gamma=0.1)
model
plot(model,data,x~y,slice=list(x=3,y=5))
source("svm.R")
source("svm.R")
source("svm.R")
source("svm.R")
?svm
source("svm.R")
source("svm.R")
source("svm.R")
source("svm.R")
source("svm.R")
TrnX1=matrix(c(90,90,90,90,1.7,80))
TrnX1
TrnX2=matrix(c(90,90,90,80,1.75,80),ncol=2)
TrnX2
install.packages("sudokuplus")
generatesudoku(9,"2012-05-11")
library(sudokuplus)
install.packages("sudokuplus")
install.package("tkrplot")
install.packages("tkrplot")
install.packages("sudokuplus")
install.packages("sudoku");
library(sudoku)
readSudoku
?readSudoku
z <- readSudoku(system.file("puz1.txt", package="sudoku"))
z
z <- readSudoku(system.file("puz1.txt", package="sudoku"))
z
printSudoku(z)
y<-solveSudoku(x)
y<-solveSudoku(z)
printSudoku(y)
printSudoku(z)
printSudoku(y)
